[{"/Users/Scottpribe/the-odin-project/todo-list-2/src/index.js":"1","/Users/Scottpribe/the-odin-project/todo-list-2/src/App.js":"2","/Users/Scottpribe/the-odin-project/todo-list-2/src/reportWebVitals.js":"3","/Users/Scottpribe/the-odin-project/todo-list-2/src/components/Project/Projects.js":"4","/Users/Scottpribe/the-odin-project/todo-list-2/src/components/Navigation/Navbar.js":"5","/Users/Scottpribe/the-odin-project/todo-list-2/src/components/Project/ProjectCard.js":"6","/Users/Scottpribe/the-odin-project/todo-list-2/src/components/Todo/Todos.js":"7","/Users/Scottpribe/the-odin-project/todo-list-2/src/components/User Auth/Login.js":"8","/Users/Scottpribe/the-odin-project/todo-list-2/src/components/User Auth/SignUp.js":"9","/Users/Scottpribe/the-odin-project/todo-list-2/src/components/Error.js":"10","/Users/Scottpribe/the-odin-project/todo-list-2/src/components/Todo/TodoCardDisplay.js":"11","/Users/Scottpribe/the-odin-project/todo-list-2/src/components/Todo/TodoCardForm.js":"12"},{"size":500,"mtime":1608685909050,"results":"13","hashOfConfig":"14"},{"size":4418,"mtime":1609724280409,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608685909051,"results":"16","hashOfConfig":"14"},{"size":3718,"mtime":1609619593306,"results":"17","hashOfConfig":"14"},{"size":1577,"mtime":1609383660765,"results":"18","hashOfConfig":"14"},{"size":445,"mtime":1609471176450,"results":"19","hashOfConfig":"14"},{"size":803,"mtime":1609728107366,"results":"20","hashOfConfig":"14"},{"size":948,"mtime":1609383698706,"results":"21","hashOfConfig":"14"},{"size":958,"mtime":1609383697066,"results":"22","hashOfConfig":"14"},{"size":851,"mtime":1609383924513,"results":"23","hashOfConfig":"14"},{"size":859,"mtime":1609726442069,"results":"24","hashOfConfig":"14"},{"size":598,"mtime":1609728125851,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1h2ssaq",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Scottpribe/the-odin-project/todo-list-2/src/index.js",[],["53","54"],"/Users/Scottpribe/the-odin-project/todo-list-2/src/App.js",["55"],"/Users/Scottpribe/the-odin-project/todo-list-2/src/reportWebVitals.js",[],"/Users/Scottpribe/the-odin-project/todo-list-2/src/components/Project/Projects.js",["56"],"import { React, useEffect, useState } from \"react\";\nimport ProjectCard from \"./ProjectCard\";\nimport uniqid from \"uniqid\";\nimport firebase from \"firebase/app\";\n\nimport \"firebase/firestore\";\n\nconst Projects = (props) => {\n\tconst [projectList, setProjectList] = useState([]);\n\n\tconst deleteFromProjectList = (index) => {\n\t\tfirebase\n\t\t\t.firestore()\n\t\t\t.collection(`${props.currentUser.email}-projectList`)\n\t\t\t.doc(projectList[index])\n\t\t\t.delete()\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(\"Error writing new message to database\", error);\n\t\t\t});\n\n\t\t// loadProjectListFromFirestore();\n\t\tgetProjectListFromFirestoreOnLoad();\n\t};\n\n\tconst saveProjectListToFireStore = () => {\n\t\tlet projectName = document.getElementById(\"addProjectInput\").value;\n\t\tconsole.log(projectList.includes(projectName));\n\t\tif (\n\t\t\tprojectList.includes(projectName) ||\n\t\t\tprojectName === null ||\n\t\t\tprojectName === \"\"\n\t\t)\n\t\t\treturn;\n\t\telse\n\t\t\treturn firebase\n\t\t\t\t.firestore()\n\t\t\t\t.collection(`${props.currentUser.email}-projectList`)\n\t\t\t\t.doc(`${projectName}`)\n\t\t\t\t.set({\n\t\t\t\t\tprojectName: projectName,\n\t\t\t\t\tuserEmail: props.currentUser.email,\n\t\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp(),\n\t\t\t\t})\n\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.error(\"Error writing new message to database\", error);\n\t\t\t\t});\n\t};\n\n\tconst getProjectListFromFirestoreOnLoad = () => {\n\t\tlet array = [];\n\t\tfirebase\n\t\t\t.firestore()\n\t\t\t.collection(`${props.currentUser.email}-projectList`)\n\t\t\t.get()\n\t\t\t.then((querySnapshot) => {\n\t\t\t\tquerySnapshot.forEach((doc) => {\n\t\t\t\t\tarray = [...array, doc.data().projectName];\n\t\t\t\t});\n\t\t\t\tsetProjectList(array);\n\t\t\t});\n\t\tconsole.log(projectList);\n\t};\n\n\tconst projectCardRendering = () => {\n\t\tconsole.log(\"renderFunctionisCalled\");\n\t\tconsole.log(projectList);\n\t\treturn projectList.map((element, index) => (\n\t\t\t<ProjectCard\n\t\t\t\tkey={uniqid()}\n\t\t\t\tdeleteFromProjectList={() => deleteFromProjectList(index)}\n\t\t\t\telement={element}\n\t\t\t\tindex={index}\n\t\t\t/>\n\t\t));\n\t};\n\n\tconst doubleFunction = () => {\n\t\tsaveProjectListToFireStore();\n\t\tgetProjectListFromFirestoreOnLoad();\n\t\tdocument.getElementById(\"addProjectInput\").value = \"\";\n\t};\n\n\tuseEffect(() => {\n\t\tgetProjectListFromFirestoreOnLoad();\n\t}, []);\n\n\tuseEffect(() => {\n\t\t//getProjectListFromFirestoreOnLoad();\n\t}, [projectList]);\n\n\treturn (\n\t\t<aside id=\"projectsContainer\">\n\t\t\t<h2>Projects</h2>\n\t\t\t<ul id=\"projectList\">\n\t\t\t\t<h4>View All</h4>\n\t\t\t\t{projectCardRendering()}\n\t\t\t</ul>\n\t\t\t<span onClick={() => doubleFunction()}>+</span> {\"\"} {\"\"}\n\t\t\t<input id=\"addProjectInput\" type=\"text\" placeholder=\"Add Project...\" />\n\t\t</aside>\n\t);\n};\n\nexport default Projects;\n\n// const loadProjectListFromFirestore = () => {\n// \t// \tlet query = firebase\n// \t// \t\t.firestore()\n// \t// \t\t.collection(`${props.currentUser.email}-projectList`)\n// \t// \t\t.orderBy(\"timestamp\", \"asc\");\n// \t// \tquery.onSnapshot((snapshot) => {\n// \t// \t\tsnapshot.docChanges().forEach((change) => {\n// \t// \t\t\tconsole.log(change.type, change.doc.data().projectName);\n// \t// \t\t\tif (\n// \t// \t\t\t\t!projectList.includes(change.doc.data().projectName) &&\n// \t// \t\t\t\tchange.type !== \"modified\"\n// \t// \t\t\t) {\n// \t// \t\t\t\tsetProjectList((prevState) => {\n// \t// \t\t\t\t\treturn [...prevState, change.doc.data().projectName];\n// \t// \t\t\t\t});\n// \t// \t\t\t}\n// \t// \t\t\t// \tconsole.log(\"state was set\");\n// \t// \t\t\t// \tconsole.log(projectList);\n// \t// \t\t\t// } else if (change.type === \"removed\") {\n// \t// \t\t\t// \tprojectList.indexOf(change.doc.data().projectName);\n// \t// \t\t\t// \t// setProjectList((prevState) => {\n// \t// \t\t\t// \t// \tprevState.splice(\n// \t// \t\t\t// \t// \t\tprevState.indexOf(change.doc.data().projectName, 1)\n// \t// \t\t\t// \t// \t);\n// \t// \t\t\t// \t// \tconsole.log(prevState);\n// \t// \t\t\t// \t// });\n// \t// \t\t\t// }\n// \t// \t\t});\n// \t// \t});\n// \t// };\n","/Users/Scottpribe/the-odin-project/todo-list-2/src/components/Navigation/Navbar.js",["57","58"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = (props) => {\n\tconst renderSignUpAndSignOutButton = () => {\n\t\tif (props.currentUser === null)\n\t\t\t// this stops the app from crashing when there isnt a user signed in.\n\t\t\treturn (\n\t\t\t\t<div id=\"navbarLeft\">\n\t\t\t\t\t<Link\n\t\t\t\t\t\tonClick={props.resetErrors}\n\t\t\t\t\t\tstyle={{ textDecoration: \"none\" }}\n\t\t\t\t\t\tto=\"/Login\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Link>\n\n\t\t\t\t\t<Link\n\t\t\t\t\t\tonClick={props.resetErrors}\n\t\t\t\t\t\tstyle={{ textDecoration: \"none\" }}\n\t\t\t\t\t\tto=\"/SignUp\"\n\t\t\t\t\t>\n\t\t\t\t\t\tSignUp\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t);\n\n\t\tif (props.currentUser && props.currentUser.displayName !== null)\n\t\t\treturn (\n\t\t\t\t<div id=\"navbarLeft\">\n\t\t\t\t\t<p>Welcome, {props.currentUser.displayName}</p>\n\t\t\t\t\t<a onClick={props.signOut}>Sign Out</a>\n\t\t\t\t</div>\n\t\t\t);\n\t\tif (props.currentUser.displayName === null)\n\t\t\treturn (\n\t\t\t\t<div id=\"navbarLeft\">\n\t\t\t\t\t<p>Welcome, {props.currentUser.email}</p>\n\t\t\t\t\t<a onClick={props.signOut}>Sign Out</a>\n\t\t\t\t</div>\n\t\t\t);\n\t\telse\n\t\t\treturn (\n\t\t\t\t<div id=\"navbarLeft\">\n\t\t\t\t\t<Link\n\t\t\t\t\t\tonClick={props.resetErrors}\n\t\t\t\t\t\tstyle={{ textDecoration: \"none\" }}\n\t\t\t\t\t\tto=\"/Login\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Link>\n\n\t\t\t\t\t<Link\n\t\t\t\t\t\tonClick={props.resetErrors}\n\t\t\t\t\t\tstyle={{ textDecoration: \"none\" }}\n\t\t\t\t\t\tto=\"/SignUp\"\n\t\t\t\t\t>\n\t\t\t\t\t\tSignUp\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t);\n\t};\n\n\treturn (\n\t\t<header id=\"navbarContainer\">\n\t\t\t<div id=\"navbarRight\">\n\t\t\t\t<Link style={{ textDecoration: \"none\" }} to=\"/Todos\">\n\t\t\t\t\tToDo App\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t\t{renderSignUpAndSignOutButton()}\n\t\t</header>\n\t);\n};\n\nexport default Navbar;\n","/Users/Scottpribe/the-odin-project/todo-list-2/src/components/Project/ProjectCard.js",[],"/Users/Scottpribe/the-odin-project/todo-list-2/src/components/Todo/Todos.js",[],"/Users/Scottpribe/the-odin-project/todo-list-2/src/components/User Auth/Login.js",[],"/Users/Scottpribe/the-odin-project/todo-list-2/src/components/User Auth/SignUp.js",[],"/Users/Scottpribe/the-odin-project/todo-list-2/src/components/Error.js",[],"/Users/Scottpribe/the-odin-project/todo-list-2/src/components/Todo/TodoCardDisplay.js",[],"/Users/Scottpribe/the-odin-project/todo-list-2/src/components/Todo/TodoCardForm.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":10,"column":8,"nodeType":"65","messageId":"66","endLine":10,"endColumn":16},{"ruleId":"67","severity":1,"message":"68","line":86,"column":5,"nodeType":"69","endLine":86,"endColumn":7,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":32,"column":6,"nodeType":"73","endLine":32,"endColumn":33},{"ruleId":"71","severity":1,"message":"72","line":39,"column":6,"nodeType":"73","endLine":39,"endColumn":33},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Projects' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProjectListFromFirestoreOnLoad'. Either include it or remove the dependency array.","ArrayExpression",["76"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [getProjectListFromFirestoreOnLoad]",{"range":"79","text":"80"},[2176,2178],"[getProjectListFromFirestoreOnLoad]"]